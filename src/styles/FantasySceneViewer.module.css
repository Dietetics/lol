/* FantasySceneViewer.module.css */

.transitionFantasy {
    transition: all 0.3s ease-in-out;
}

.fantasyGlow {
    box-shadow: 0 0 20px rgba(212, 175, 55, 0.5);
    filter: blur(2px) brightness(0.6);
}

.focusOverlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 2;
    transition: all 0.3s ease-in-out;
}

.hoverOverlay {
    pointer-events: auto;
    cursor: pointer;
    transition: all 0.3s ease-in-out;
    opacity: 0;
}

.hoverActive {
    opacity: 0.6;
}

.hoverIndicator {
    position: absolute;
    background-color: rgba(42, 42, 42, 0.8);
    backdrop-filter: blur(4px);
    border-radius: 0.5rem;
    padding: 0.5rem 1rem;
    font-weight: 500;
    font-size: 0.875rem;
    color: #d4af37;
    top: 1rem;
    right: 1rem;
    transition: all 0.3s ease-in-out;
    pointer-events: none;
    transform: translateY(-0.5rem);
    opacity: 0;
}

.hoverIndicatorVisible {
    opacity: 1;
    transform: translateY(0);
}

.ambientGlow {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 24rem;
    height: 24rem;
    background-color: rgba(212, 175, 55, 0.05);
    filter: blur(3rem);
    opacity: 0.3;
    border-radius: 9999px;
}


.container {
    position: relative;
    width: 100%;
    aspect-ratio: 16 / 9;
    overflow: hidden;
}

.sceneImage {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
}

.svgOverlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 3;
}

.hoverPath {
    pointer-events: auto;
    cursor: pointer;
    transition: all 0.3s ease-in-out;
    opacity: 0;
}

.hoverPathActive {
    opacity: 0.8;
    fill: rgba(255, 255, 255, 0.15);
    stroke: rgba(212, 175, 55, 0.8);
    strokeWidth: 3;
    filter: drop-shadow(0 0 15px rgba(212, 175, 55, 0.6));
}

/* Door opening animation keyframes */
@keyframes doorOpen {
    0% {
        transform: perspective(1200px) rotateY(0deg);
        transform-origin: left center;
        box-shadow: 0 0 0 rgba(0, 0, 0, 0);
    }
    50% {
        transform: perspective(1200px) rotateY(-45deg);
        transform-origin: left center;
        box-shadow: -20px 0 40px rgba(0, 0, 0, 0.3);
    }
    100% {
        transform: perspective(1200px) rotateY(-90deg);
        transform-origin: left center;
        box-shadow: -40px 0 80px rgba(0, 0, 0, 0.5);
        opacity: 0;
    }
}

@keyframes sceneReveal {
    0% {
        opacity: 0;
        transform: scale(1.1);
        filter: blur(5px);
    }
    100% {
        opacity: 1;
        transform: scale(1);
        filter: blur(0px);
    }
}

@keyframes lightBeamEffect {
    0% {
        opacity: 0;
        transform: scaleX(0);
    }
    50% {
        opacity: 0.8;
        transform: scaleX(1);
    }
    100% {
        opacity: 0;
        transform: scaleX(1.2);
    }
}

/* Animation classes */
.animate-mystical-pulse {
    animation: mystical-pulse 3s ease-in-out infinite;
}

.animate-hover-glow {
    animation: hover-glow 0.3s ease-out forwards;
}

.doorOpenAnimation {
    animation: doorOpen 2s ease-in-out forwards;
}

.sceneRevealAnimation {
    animation: sceneReveal 1.5s ease-out 1.5s forwards;
    opacity: 0;
}

.lightBeamAnimation {
    animation: lightBeamEffect 2s ease-out 0.5s forwards;
}